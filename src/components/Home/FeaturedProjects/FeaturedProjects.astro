---

---

<section class="slider-section mb-12">
  <div class="wrapper">
    <i class="fas fa-chevron-left"></i>

    <div class="carousel">
      <div class="card">
        <div class="img">
          <img
            src="https://images.spiceworks.com/wp-content/uploads/2023/05/25061046/Shutterstock_2060615657.jpg"
            alt="img"
            draggable="false"
          />
        </div>
        <div class="cart-context">
          <a href="">
            <h2 class="text-center">Read The Case Study</h2>
          </a>
        </div>
      </div>
      <div class="card">
        <div class="img">
          <img
            src="https://i.ibb.co/HXpSLS3/289443351-105610845531883-1787369662133545271-n.png"
            alt="img"
            draggable="false"
          />
        </div>
        <div class="cart-context">
          <a href="">
            <h2 class="text-center">Read The Case Study</h2>
          </a>
        </div>
      </div>
      <div class="card">
        <div class="img">
          <img
            src="https://images-platform.99static.com/BexSbgclNrOjX68RKf5lM-D4JmU=/500x500/top/smart/99designs-contests-attachments/4/4836/attachment_4836635"
            alt="img"
            draggable="false"
          />
        </div>
        <div class="cart-context">
          <a href="">
            <h2 class="text-center">Read The Case Study</h2>
          </a>
        </div>
      </div>
      <div class="card">
        <div class="img">
          <img
            src="https://images-platform.99static.com//7gNsXxLKWsYMdF6kxprLmHJd7hA=/0x0:1000x1000/fit-in/500x500/99designs-contests-attachments/127/127736/attachment_127736921"
            alt="img"
            draggable="false"
          />
        </div>
        <div class="cart-context">
          <a href="">
            <h2 class="text-center">Read The Case Study</h2>
          </a>
        </div>
      </div>
      <div class="card">
        <div class="img">
          <img
            src="https://bcassetcdn.com/public/blog/wp-content/uploads/2022/11/09183931/comtug-logo-design-combination-mark-logo-unused-by-md-zahid-hasan-dribbble.png"
            alt="img"
            draggable="false"
          />
        </div>
        <div class="cart-context">
          <a href="">
            <h2 class="text-center">Read The Case Study</h2>
          </a>
        </div>
      </div>
      <div class="card">
        <div class="img">
          <img
            src="https://images-platform.99static.com//49KJCCZNuzMWiCi8r7v4IsgQwoo=/0x0:2000x2000/fit-in/590x590/99designs-contests-attachments/88/88710/attachment_88710509"
            alt="img"
            draggable="false"
          />
        </div>
        <div class="cart-context">
          <a href="">
            <h2 class="text-center">Read The Case Study</h2>
          </a>
        </div>
      </div>
    </div>
    <i class="fas fa-chevron-right"></i>
  </div>
</section>

<script is:inline>
  const wrapper = document.querySelector(".wrapper");
  const carousel = document.querySelector(".carousel");
  const firstCardWidth = carousel.querySelector(".card").offsetWidth;
  const arrowBtns = document.querySelectorAll(".wrapper i");
  const carouselChildrens = [...carousel.children];

  let isDragging = false,
    isAutoPlay = true,
    startX,
    startScrollLeft,
    timeoutId;

  // Get the number of cards that can fit in the carousel at once
  let cardPerView = Math.round(carousel.offsetWidth / firstCardWidth);

  // Insert copies of the last few cards to beginning of carousel for infinite scrolling
  carouselChildrens
    .slice(-cardPerView)
    .reverse()
    .forEach((card) => {
      carousel.insertAdjacentHTML("afterbegin", card.outerHTML);
    });

  // Insert copies of the first few cards to end of carousel for infinite scrolling
  carouselChildrens.slice(0, cardPerView).forEach((card) => {
    carousel.insertAdjacentHTML("beforeend", card.outerHTML);
  });

  // Scroll the carousel at appropriate postition to hide first few duplicate cards on Firefox
  carousel.classList.add("no-transition");
  carousel.scrollLeft = carousel.offsetWidth;
  carousel.classList.remove("no-transition");

  // Add event listeners for the arrow buttons to scroll the carousel left and right
  arrowBtns.forEach((btn) => {
    btn.addEventListener("click", () => {
      carousel.scrollLeft +=
        btn.id == "left" ? -firstCardWidth : firstCardWidth;
    });
  });

  const dragStart = (e) => {
    isDragging = true;
    carousel.classList.add("dragging");
    // Records the initial cursor and scroll position of the carousel
    startX = e.pageX;
    startScrollLeft = carousel.scrollLeft;
  };

  const dragging = (e) => {
    if (!isDragging) return; // if isDragging is false return from here
    // Updates the scroll position of the carousel based on the cursor movement
    carousel.scrollLeft = startScrollLeft - (e.pageX - startX);
  };

  const dragStop = () => {
    isDragging = false;
    carousel.classList.remove("dragging");
  };

  const infiniteScroll = () => {
    // If the carousel is at the beginning, scroll to the end
    if (carousel.scrollLeft === 0) {
      carousel.classList.add("no-transition");
      carousel.scrollLeft = carousel.scrollWidth - 2 * carousel.offsetWidth;
      carousel.classList.remove("no-transition");
    }
    // If the carousel is at the end, scroll to the beginning
    else if (
      Math.ceil(carousel.scrollLeft) ===
      carousel.scrollWidth - carousel.offsetWidth
    ) {
      carousel.classList.add("no-transition");
      carousel.scrollLeft = carousel.offsetWidth;
      carousel.classList.remove("no-transition");
    }

    // Clear existing timeout & start autoplay if mouse is not hovering over carousel
    clearTimeout(timeoutId);
    if (!wrapper.matches(":hover")) autoPlay();
  };

  const autoPlay = () => {
    if (window.innerWidth < 800 || !isAutoPlay) return; // Return if window is smaller than 800 or isAutoPlay is false
    // Autoplay the carousel after every 2500 ms
    timeoutId = setTimeout(() => (carousel.scrollLeft += firstCardWidth), 2500);
  };
  autoPlay();

  carousel.addEventListener("mousedown", dragStart);
  carousel.addEventListener("mousemove", dragging);
  document.addEventListener("mouseup", dragStop);
  carousel.addEventListener("scroll", infiniteScroll);
  wrapper.addEventListener("mouseenter", () => clearTimeout(timeoutId));
  wrapper.addEventListener("mouseleave", autoPlay);
</script>
